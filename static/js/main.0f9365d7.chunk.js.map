{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/ProfileHome.js","components/TodoListTable.js","components/Todo.js","components/TodoListAssign.js","components/Timer.js","components/Notice.js","routes/Home.js","components/Profile.js","components/HistoryTable.js","components/History.js","components/Analysis.js","routes/MyPage.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Profile","userObj","history","useHistory","displayName","to","faUserEdit","window","confirm","signOut","push","faPowerOff","TodoListTable","todoObj","editing","setEditing","work","newWork","setNewWork","subject","newSubject","setNewSubject","format","newFormat","setNewFormat","duedate","newDate","setNewDate","convertTime","setConvertTime","useEffect","convertedTime","inputTime","hours","String","Math","floor","padStart","minutes","secondsToHhMmSs","studyTime","onDeleteClick","doc","uid","id","delete","toggleEditing","update","onCompleteClick","t","submitAt","date","Date","getMonth","slice","getDate","getToday","n","creatorId","collection","add","faCheckCircle","size","faBan","inputDateString","thisDate","split","join","deleteYear","faTrash","faEdit","faClipboardCheck","Todo","todoLists","filterTarget","setFilterTarget","sortTodo","setSortTodo","filteredTodoLists","filter","todoList","sort","b","getTime","orderBy","onSnapshot","snapshot","todoArray_a","docs","map","baseArray","filterArray","clickedFilter","innerText","todo","Set","filterObj","uuidv4","colSpan","TodoListAssign","setWork","setSubject","setFormat","setDate","newTodoListObj","createdAt","now","faPlusSquare","Timer","listener","returnValue","displayTimer","setDisplayTimer","timerOn","setTimerOn","endTime","setEndTime","startTime","setstartTime","selectedTodo","setSelectedTodo","HhMmSstoSeconds","timeData","timeArray","parseInt","interval","firstStart","setInterval","nowTime","nowTimeSeconds","restartTime","reNowTime","reNowTimeSeconds","clearInterval","addedItem","confirmAdd","length","get","beforeAddedItem","beforeTime","addedTime","totalTime","onbeforeunload","selectedSubject","faUserClock","faPlay","pauseTime","faPause","faRedo","Notice","notice","noticeString","noticeURL","url","href","faBell","faYoutube","Home","setTodoLists","todoArray","refreshUser","nameEdit","setNameEdit","newDisplayName","setNewDisplayName","updateProfile","autoFocus","faUndo","HistoryTable","History","oT","setoT","thisT","forEach","element","nT","TotalTime","then","querySnapshot","ref","faExclamationCircle","Analysis","top3","counted","reduce","acc","cur","s","Object","keys","key","eT","no","rT","toFixed","el","MyPage","AppRouter","isLoggedIn","exact","path","from","App","setNotice","studyMode","setStudyMode","timerMode","setTimerMode","modeObj","setModeObj","init","setInit","setUserObj","onAuthStateChanged","user","getcurrentMode","getNotice","args","studymode","timermode","idCheckLists","currentMode","indexOf","set","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f9365d7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBM0UEJkH9cT2XTaIyazlsm90a9_iOsyE8\",\r\n  authDomain: \"pecker-8b0ae.firebaseapp.com\",\r\n  projectId: \"pecker-8b0ae\",\r\n  storageBucket: \"pecker-8b0ae.appspot.com\",\r\n  messagingSenderId: \"350251717169\",\r\n  appId: \"1:350251717169:web:1cf810a9cf1448679a3b10\",\r\n  measurementId: \"G-HMNDXD3KF3\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageSerive = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport \"../css/Authform.css\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"auth-form-container\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"auth-input\"\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          className=\"auth-input\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          className=\"auth-input-btn\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          required\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span className=\"auth-toggle-btn\" onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport \"../css/Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button className=\"authBtn\" onClick={onSocialClick} name=\"google\">\r\n          Continue with <span className=\"google-blue\">G</span>\r\n          <span className=\"google-red\">o</span>\r\n          <span className=\"google-yellow\">o</span>\r\n          <span className=\"google-blue\">g</span>\r\n          <span className=\"google-green\">l</span>\r\n          <span className=\"google-red\">e </span>\r\n          <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button className=\"authBtn\" onClick={onSocialClick} name=\"github\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserEdit, faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../css/ProfileHome.css\";\r\n\r\nconst Profile = ({ userObj }) => {\r\n  const history = useHistory();\r\n\r\n  const onLogOutClick = () => {\r\n    const okLogOut = window.confirm(\"로그아웃하시겠습니까?\");\r\n    if (okLogOut) {\r\n      authService.signOut();\r\n      history.push(\"/\");\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"greeting\">안녕하세요 {userObj.displayName}님</div>\r\n\r\n      <div className=\"btns-container\">\r\n        <div>\r\n          <Link to=\"/my-page\">\r\n            <button className=\"profile-edit-btn\">\r\n              <FontAwesomeIcon icon={faUserEdit} />\r\n              &nbsp; 마이페이지\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <button className=\"logout-btn\" onClick={onLogOutClick}>\r\n            <FontAwesomeIcon icon={faPowerOff} />\r\n            &nbsp; 로그아웃\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClipboardCheck,\r\n  faEdit,\r\n  faTrash,\r\n  faBan,\r\n  faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../css/TodoListTable.css\";\r\n\r\nconst TodoListTable = ({ userObj, todoObj }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newWork, setNewWork] = useState(todoObj.work);\r\n  const [newSubject, setNewSubject] = useState(todoObj.subject);\r\n  const [newFormat, setNewFormat] = useState(todoObj.format);\r\n  const [newDate, setNewDate] = useState(todoObj.duedate);\r\n\r\n  const [convertTime, setConvertTime] = useState(\"00:00:00\");\r\n  function secondsToHhMmSs(inputTime) {\r\n    let hours = String(Math.floor(inputTime / 3600)).padStart(2, \"0\");\r\n    let minutes = String(Math.floor((inputTime - 3600 * hours) / 60)).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    let seconds = String(inputTime - 3600 * hours - 60 * minutes).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    const HhMmSs = hours + \":\" + minutes + \":\" + seconds;\r\n    return HhMmSs;\r\n  }\r\n\r\n  function deleteYear(inputDateString) {\r\n    let thisDate = inputDateString.split(\"-\");\r\n    let newDate = [thisDate[1], thisDate[2]].join(\"-\");\r\n    return newDate;\r\n  }\r\n  useEffect(() => {\r\n    const convertedTime = secondsToHhMmSs(todoObj.studyTime);\r\n    setConvertTime(convertedTime);\r\n  }, [todoObj.studyTime]);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`${userObj.uid}/${todoObj.id}`).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"work\") {\r\n      setNewWork(value);\r\n    } else if (name === \"subject\") {\r\n      setNewSubject(value);\r\n    } else if (name === \"format\") {\r\n      setNewFormat(value);\r\n    } else if (name === \"date\") {\r\n      setNewDate(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`${userObj.uid}/${todoObj.id}`).update({\r\n      work: newWork,\r\n      subject: newSubject,\r\n      format: newFormat,\r\n      duedate: newDate,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onCompleteClick = async () => {\r\n    const t = todoObj.work;\r\n    const ok = window.confirm(`${t} 일을 완료하셨습니까?`);\r\n    if (ok) {\r\n      function getToday() {\r\n        let date = new Date();\r\n        let month = (\"0\" + (1 + date.getMonth())).slice(-2);\r\n        let day = (\"0\" + date.getDate()).slice(-2);\r\n        return month + \"-\" + day;\r\n      }\r\n      const submitAt = getToday();\r\n      const n = {\r\n        work: todoObj.work,\r\n        subject: todoObj.subject,\r\n        format: todoObj.format,\r\n        creatorId: userObj.uid,\r\n        studyTime: todoObj.studyTime,\r\n        submitAt: submitAt,\r\n      };\r\n      await dbService.collection(`completed/sortByUser/${userObj.uid}`).add(n);\r\n      await dbService.doc(`${userObj.uid}/${todoObj.id}`).delete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {editing ? (\r\n        <tr className=\"todolist-row\">\r\n          <td className=\"todo-edit-task-box\">\r\n            <input\r\n              className=\"todo-edit-task\"\r\n              name=\"work\"\r\n              value={newWork}\r\n              type=\"text\"\r\n              placeholder={todoObj.work}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </td>\r\n          <td className=\"todo-edit-category-box\">\r\n            <input\r\n              className=\"todo-edit-category\"\r\n              name=\"subject\"\r\n              value={newSubject}\r\n              type=\"text\"\r\n              placeholder={todoObj.subject}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </td>\r\n          <td className=\"todo-edit-format-box\">\r\n            <input\r\n              className=\"todo-edit-format\"\r\n              name=\"format\"\r\n              value={newFormat}\r\n              type=\"text\"\r\n              placeholder={todoObj.format}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </td>\r\n          <td className=\"todo-edit-due-box\">\r\n            <input\r\n              className=\"todo-edit-due\"\r\n              name=\"date\"\r\n              value={newDate}\r\n              type=\"date\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </td>\r\n          <td className=\"todo-table-study-column\">{convertTime}</td>\r\n          <td>\r\n            <button className=\"todolist-btn edit-btn\" onClick={onSubmit}>\r\n              <FontAwesomeIcon icon={faCheckCircle} size=\"lg\" />\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button className=\"todolist-btn cancel-btn\" onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faBan} size=\"lg\" />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        <>\r\n          <tr className=\"todolist-row\">\r\n            <td className=\"todo-table-task-column\">{todoObj.work}</td>\r\n            <td className=\"todo-table-category-column\">{todoObj.subject}</td>\r\n            <td className=\"todo-table-format-column\">{todoObj.format}</td>\r\n            <td className=\"todo-table-due-column\">\r\n              {deleteYear(todoObj.duedate)}\r\n            </td>\r\n            <td className=\"todo-table-study-column\">{convertTime}</td>\r\n            <td>\r\n              <button\r\n                className=\"todolist-btn cancel-btn\"\r\n                onClick={onDeleteClick}\r\n              >\r\n                <FontAwesomeIcon icon={faTrash} size=\"lg\" />\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button className=\"todolist-btn edit-btn\" onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faEdit} size=\"lg\" />\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"todolist-btn edit-btn\"\r\n                onClick={onCompleteClick}\r\n              >\r\n                <FontAwesomeIcon icon={faClipboardCheck} size=\"lg\" />\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoListTable;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport TodoListTable from \"./TodoListTable\";\r\nimport \"../css/Todo.css\";\r\n\r\nconst Todo = ({ todoLists, userObj }) => {\r\n  const [filterTarget, setFilterTarget] = useState(\"\");\r\n  const [sortTodo, setSortTodo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTarget !== \"\") {\r\n      const filteredTodoLists = todoLists.filter(\r\n        (todoList) => todoList.subject === filterTarget\r\n      );\r\n      function date_ascending(a, b) {\r\n        var dateA = new Date(a[\"duedate\"]).getTime();\r\n        var dateB = new Date(b[\"duedate\"]).getTime();\r\n        return dateA > dateB ? 1 : -1;\r\n      }\r\n      filteredTodoLists.sort(date_ascending);\r\n      setSortTodo(filteredTodoLists);\r\n    } else {\r\n      dbService\r\n        .collection(`${userObj.uid}`)\r\n        .orderBy(\"duedate\", \"asc\")\r\n        .onSnapshot((snapshot) => {\r\n          const todoArray_a = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          setSortTodo(todoArray_a);\r\n        });\r\n    }\r\n  }, [filterTarget, todoLists]);\r\n\r\n  let baseArray = [];\r\n  let filterArray = [];\r\n\r\n  const onClick = (event) => {\r\n    const clickedFilter = event.target.innerText;\r\n    setFilterTarget(clickedFilter);\r\n  };\r\n  const unfilter = (event) => {\r\n    setFilterTarget(\"\");\r\n  };\r\n  const subjectArray = todoLists.map((todo) => {\r\n    baseArray.push(todo.subject);\r\n  });\r\n  const targetSubject = [...new Set(baseArray)];\r\n  const filtering = targetSubject.map((doc) => {\r\n    const filterObj = {\r\n      id: uuidv4(),\r\n      subject: doc,\r\n    };\r\n    filterArray.push(filterObj);\r\n  });\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 className=\"todo-title\">Todo List</h1>\r\n        <div className=\"todo-filter-div\">\r\n          <button className=\"todo-filter-btn\" onClick={unfilter}>\r\n            전체\r\n          </button>\r\n          {filterArray.map((doc) => (\r\n            <button className=\"todo-filter-btn\" onClick={onClick} key={doc.id}>\r\n              {doc.subject}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"todolists-table-container\">\r\n          <table className=\"todolist-table\">\r\n            <thead className=\"todolist-thead\">\r\n              <tr>\r\n                <th className=\"todolist-task-column\">할 일</th>\r\n                <th className=\"todolist-category-column\">카테고리</th>\r\n                <th className=\"todolist-format-column\">형식</th>\r\n                <th className=\"todolist-due-column\">마감일</th>\r\n                <th className=\"todolist-studytime-column\">소요 시간</th>\r\n                <th colSpan=\"3\" className=\"todolist-button-column\">\r\n                  Buttons\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sortTodo.map((todoList) => (\r\n                <TodoListTable\r\n                  userObj={userObj}\r\n                  key={todoList.id}\r\n                  todoObj={todoList}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport \"../css/TodoListAssign.css\";\r\n\r\nconst TodoListAssign = ({ userObj }) => {\r\n  const [work, setWork] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [format, setFormat] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"work\") {\r\n      setWork(value);\r\n    } else if (name === \"subject\") {\r\n      setSubject(value);\r\n    } else if (name === \"format\") {\r\n      setFormat(value);\r\n    } else if (name === \"date\") {\r\n      setDate(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const newTodoListObj = {\r\n      work: work,\r\n      subject: subject,\r\n      format: format,\r\n      duedate: date,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      studyTime: 0,\r\n    };\r\n    await dbService.collection(`${userObj.uid}`).add(newTodoListObj);\r\n    setWork(\"\");\r\n    setSubject(\"\");\r\n    setFormat(\"\");\r\n  };\r\n  return (\r\n    <form className=\"todo-form-container\" onSubmit={onSubmit}>\r\n      <table className=\"todo-assign-table\">\r\n        <tbody>\r\n          <tr className=\"todo-assign-row\">\r\n            <td className=\"todo-assign-column\">Task</td>\r\n            <td>\r\n              <input\r\n                className=\"todo-assign-input\"\r\n                name=\"work\"\r\n                value={work}\r\n                type=\"text\"\r\n                placeholder=\"Task\"\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr className=\"todo-assign-row\">\r\n            <td className=\"todo-assign-column\">Category</td>\r\n            <td>\r\n              <input\r\n                className=\"todo-assign-input\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                type=\"text\"\r\n                placeholder=\"Category\"\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr className=\"todo-assign-row\">\r\n            <td className=\"todo-assign-column\">Format</td>\r\n            <td>\r\n              <input\r\n                className=\"todo-assign-input\"\r\n                name=\"format\"\r\n                value={format}\r\n                type=\"text\"\r\n                placeholder=\"Format\"\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr className=\"todo-assign-row\">\r\n            <td className=\"todo-assign-column\">DueDate</td>\r\n            <td>\r\n              <input\r\n                className=\"todo-assign-input\"\r\n                name=\"date\"\r\n                type=\"date\"\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button className=\"todo-assign-submit-btn\" onSubmit={onSubmit}>\r\n        <FontAwesomeIcon icon={faPlusSquare} /> 추가하기\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoListAssign;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUserClock,\r\n  faPlay,\r\n  faPause,\r\n  faRedo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../css/Timer.css\";\r\n\r\nconst Timer = ({ userObj, todoLists }) => {\r\n  const listener = (event) => {\r\n    event.preventDefault();\r\n    event.returnValue = \"\";\r\n  };\r\n  const [displayTimer, setDisplayTimer] = useState(\"00:00:00\");\r\n  const [timerOn, setTimerOn] = useState(false);\r\n  const [endTime, setEndTime] = useState(0);\r\n  const [startTime, setstartTime] = useState(0);\r\n  const [selectedTodo, setSelectedTodo] = useState(\"\");\r\n\r\n  function secondsToHhMmSs(inputTime) {\r\n    let hours = String(Math.floor(inputTime / 3600)).padStart(2, \"0\");\r\n    let minutes = String(Math.floor((inputTime - 3600 * hours) / 60)).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    let seconds = String(inputTime - 3600 * hours - 60 * minutes).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    const HhMmSs = hours + \":\" + minutes + \":\" + seconds;\r\n    return HhMmSs;\r\n  }\r\n  function HhMmSstoSeconds(timeData) {\r\n    let timeArray = timeData.split(\":\");\r\n    const hh = parseInt(timeArray[0]);\r\n    const mm = parseInt(timeArray[1]);\r\n    const ss = parseInt(timeArray[2]);\r\n    let usageTime_toSeconds = 0;\r\n    usageTime_toSeconds = hh * 3600 + mm * 60 + ss;\r\n    return usageTime_toSeconds;\r\n  }\r\n  useEffect(() => {\r\n    let interval;\r\n    if (timerOn) {\r\n      if (endTime === 0) {\r\n        const firstStart = Date.now();\r\n        setstartTime(firstStart);\r\n        interval = setInterval(() => {\r\n          const nowTime = Date.now();\r\n          const nowTimeSeconds = Math.floor((nowTime - firstStart) / 1000);\r\n          setDisplayTimer(secondsToHhMmSs(nowTimeSeconds));\r\n        }, 1000);\r\n      } else {\r\n        const restartTime = startTime - endTime + Date.now();\r\n        setstartTime(restartTime);\r\n        interval = setInterval(() => {\r\n          const reNowTime = Date.now();\r\n          const reNowTimeSeconds = Math.floor((reNowTime - restartTime) / 1000);\r\n          setDisplayTimer(secondsToHhMmSs(reNowTimeSeconds));\r\n        }, 1000);\r\n      }\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [timerOn]);\r\n\r\n  const onStart = () => {\r\n    window.onbeforeunload = listener;\r\n    setTimerOn(true);\r\n  };\r\n  const onPause = () => {\r\n    const pauseTime = Date.now();\r\n    setEndTime(pauseTime);\r\n    setTimerOn(false);\r\n  };\r\n  const onReset = () => {\r\n    window.onbeforeunload = null;\r\n    setTimerOn(false);\r\n    setDisplayTimer(\"00:00:00\");\r\n    setEndTime(0);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const addedItem = todoLists.filter(\r\n      (todoList) => todoList.createdAt === parseInt(selectedTodo)\r\n    );\r\n    const confirmAdd = window.confirm(\"해당 작업에 시간을 추가하시겠습니까?\");\r\n    if (addedItem.length === 1 && confirmAdd) {\r\n      const beforeAddedItem = await dbService\r\n        .doc(`${userObj.uid}/${addedItem[0].id}`)\r\n        .get();\r\n      const beforeTime = beforeAddedItem.data().studyTime;\r\n      const addedTime = HhMmSstoSeconds(displayTimer);\r\n      const totalTime = beforeTime + addedTime;\r\n      await dbService\r\n        .doc(`${userObj.uid}/${addedItem[0].id}`)\r\n        .update({ studyTime: totalTime });\r\n      setTimerOn(false);\r\n      setDisplayTimer(\"00:00:00\");\r\n      setEndTime(0);\r\n    } else {\r\n      return;\r\n    }\r\n    window.onbeforeunload = null;\r\n  };\r\n  const onChange = async (event) => {\r\n    const selectedSubject = event.target.value;\r\n    await setSelectedTodo(selectedSubject);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"timer-title\">\r\n          <FontAwesomeIcon icon={faUserClock} />\r\n          &nbsp;&nbsp;Study Timer\r\n        </div>\r\n        <div className=\"display-time\">{displayTimer}</div>\r\n        <div className=\"timer-btns\">\r\n          {!timerOn && (\r\n            <button className=\"timer-btn left-btn\" onClick={onStart}>\r\n              <FontAwesomeIcon icon={faPlay} size=\"2x\" />\r\n            </button>\r\n          )}\r\n          {timerOn && (\r\n            <button className=\"timer-btn left-btn\" onClick={onPause}>\r\n              <FontAwesomeIcon icon={faPause} size=\"2x\" />\r\n            </button>\r\n          )}\r\n          <button className=\"timer-btn right-btn\" onClick={onReset}>\r\n            <FontAwesomeIcon icon={faRedo} size=\"2x\" />\r\n          </button>\r\n        </div>\r\n\r\n        {timerOn ? (\r\n          <></>\r\n        ) : (\r\n          <div className=\"add-timer-container\">\r\n            <form onSubmit={onSubmit}>\r\n              <select\r\n                className=\"timer-select-todolists\"\r\n                onChange={onChange}\r\n                name=\"studyTime\"\r\n              >\r\n                <option value=\"\">--Please choose a task--</option>\r\n                {todoLists.map((doc) => (\r\n                  <option key={doc.id} value={doc.createdAt}>\r\n                    {doc.work}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <button className=\"timer-select-btn\" onSubmit={onSubmit}>\r\n                시간 추가\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"../css/Notice.css\";\r\n\r\nconst Notice = ({ notice }) => {\r\n  const noticeString = notice.notice;\r\n  const noticeURL = notice.url;\r\n  return (\r\n    <div className=\"notice-container\">\r\n      <a className=\"notice-sentence\" href={noticeURL}>\r\n        <FontAwesomeIcon icon={faBell} />\r\n        &nbsp; {noticeString}{\" \"}\r\n      </a>\r\n      <a\r\n        className=\"own-youtube\"\r\n        href=\"https://www.youtube.com/channel/UCZf62-sE0Xnm_nXefPAJ6YQ\"\r\n      >\r\n        <FontAwesomeIcon icon={faYoutube} />\r\n        &nbsp;프로젝트 개발기록\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import Profile_Main from \"components/ProfileHome\";\r\nimport Todo from \"components/Todo\";\r\nimport TodoListAssign from \"components/TodoListAssign\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Timer from \"components/Timer\";\r\nimport { dbService } from \"fbase\";\r\nimport \"../css/Home.css\";\r\nimport Notice from \"components/Notice\";\r\n\r\n// Todo.js만들어서 다 넣어버리기\r\nconst Home = ({ notice, userObj }) => {\r\n  const [todoLists, setTodoLists] = useState([]);\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(`${userObj.uid}`)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const todoArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTodoLists(todoArray);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"home-container\">\r\n        <div className=\"first-inner-container\">\r\n          <div className=\"first-box-container box-container\">\r\n            <Profile_Main className=\"home-profile\" userObj={userObj} />\r\n            <TodoListAssign className=\"home-todo-assign\" userObj={userObj} />\r\n          </div>\r\n          <div className=\"second-box-container box-container\">\r\n            <Timer userObj={userObj} todoLists={todoLists} />\r\n          </div>\r\n        </div>\r\n        <div className=\"second-inner-container\">\r\n          <div className=\"third-box-container box-container\">\r\n            <Todo userObj={userObj} todoLists={todoLists} />\r\n          </div>\r\n          <div className=\"fourth-box-container box-container\">\r\n            <Notice notice={notice} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserEdit, faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../css/Profile.css\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const [nameEdit, setNameEdit] = useState(false);\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n    setNameEdit(false);\r\n  };\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"greeting\">안녕하세요 {userObj.displayName}님</div>\r\n\r\n      <div className=\"edit-profile\">\r\n        {nameEdit ? (\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              className=\"edit-finish-btn\"\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              autoFocus\r\n              placeholder=\"New Name\"\r\n              value={newDisplayName}\r\n            />\r\n            <input\r\n              className=\"edit-finish-btn\"\r\n              type=\"submit\"\r\n              value=\"이름 변경하기\"\r\n            />\r\n          </form>\r\n        ) : (\r\n          <>\r\n            <button\r\n              className=\"profile-edit-btn\"\r\n              onClick={() => setNameEdit(true)}\r\n            >\r\n              <FontAwesomeIcon icon={faUserEdit} />\r\n              &nbsp; 이름 수정\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"logout-container\">\r\n        <Link to=\"/\">\r\n          <button className=\"logout-btn\">\r\n            <FontAwesomeIcon icon={faUndo} />\r\n            &nbsp; 돌아가기\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/HistoryTable.css\";\r\n\r\nconst HistoryTable = ({ userObj, todoObj }) => {\r\n  const [convertTime, setConvertTime] = useState(\"00:00:00\");\r\n\r\n  function secondsToHhMmSs(inputTime) {\r\n    let hours = String(Math.floor(inputTime / 3600)).padStart(2, \"0\");\r\n    let minutes = String(Math.floor((inputTime - 3600 * hours) / 60)).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    let seconds = String(inputTime - 3600 * hours - 60 * minutes).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    const HhMmSs = hours + \":\" + minutes + \":\" + seconds;\r\n    return HhMmSs;\r\n  }\r\n  useEffect(() => {\r\n    const convertedTime = secondsToHhMmSs(todoObj.studyTime);\r\n    setConvertTime(convertedTime);\r\n  }, [todoObj.studyTime]);\r\n  return (\r\n    <>\r\n      <tr className=\"history-row\">\r\n        <td className=\"history-table-task-column\">{todoObj.work}</td>\r\n        <td className=\"history-table-subject-column\">{todoObj.subject}</td>\r\n        <td className=\"history-table-format-column\">{todoObj.format}</td>\r\n        <td className=\"history-table-sumbitAt-column\">{todoObj.submitAt}</td>\r\n        <td className=\"history-table-studyTime-column\">{convertTime}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HistoryTable;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport HistoryTable from \"./HistoryTable\";\r\nimport \"../css/History.css\";\r\n\r\nconst History = ({ todoLists, userObj }) => {\r\n  const [filterTarget, setFilterTarget] = useState(\"\");\r\n  const [sortTodo, setSortTodo] = useState(todoLists);\r\n  const [oT, setoT] = useState(0);\r\n\r\n  function secondsToHhMmSs(inputTime) {\r\n    let hours = String(Math.floor(inputTime / 3600)).padStart(2, \"0\");\r\n    let minutes = String(Math.floor((inputTime - 3600 * hours) / 60)).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    let seconds = String(inputTime - 3600 * hours - 60 * minutes).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    const HhMmSs = hours + \":\" + minutes + \":\" + seconds;\r\n    return HhMmSs;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let thisT = 0;\r\n    if (filterTarget !== \"\") {\r\n      const filteredTodoLists = todoLists.filter(\r\n        (todoList) => todoList.subject === filterTarget\r\n      );\r\n      filteredTodoLists.forEach((element) => {\r\n        let nT = thisT + element.studyTime;\r\n        thisT = nT;\r\n      });\r\n      setoT(thisT);\r\n      setSortTodo(filteredTodoLists);\r\n    } else {\r\n      todoLists.forEach((element) => {\r\n        let nT = thisT + element.studyTime;\r\n        thisT = nT;\r\n      });\r\n      setoT(thisT);\r\n      setSortTodo(todoLists);\r\n    }\r\n  }, [filterTarget, todoLists]);\r\n\r\n  let baseArray = [];\r\n  let filterArray = [];\r\n\r\n  const onClick = (event) => {\r\n    const clickedFilter = event.target.innerText;\r\n    setFilterTarget(clickedFilter);\r\n  };\r\n  const onReset = () => {\r\n    const ok = window.confirm(\"히스토리를 전부 리셋하시겠습니까?\");\r\n    if (ok) {\r\n      dbService\r\n        .collection(\"completed\")\r\n        .doc(\"sortByUser\")\r\n        .collection(`${userObj.uid}`)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.docs.forEach((snapshot) => {\r\n            snapshot.ref.delete();\r\n          });\r\n        });\r\n    }\r\n  };\r\n  const unfilter = (event) => {\r\n    setFilterTarget(\"\");\r\n  };\r\n  todoLists.map((todo) => {\r\n    baseArray.push(todo.subject);\r\n  });\r\n  const targetSubject = [...new Set(baseArray)];\r\n  targetSubject.map((doc) => {\r\n    const filterObj = {\r\n      id: uuidv4(),\r\n      subject: doc,\r\n    };\r\n    filterArray.push(filterObj);\r\n  });\r\n\r\n  const TotalTime = secondsToHhMmSs(oT);\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 className=\"todo-title\">History</h1>\r\n        <div className=\"todo-filter-div\">\r\n          <button className=\"todo-filter-btn\" onClick={unfilter}>\r\n            전체\r\n          </button>\r\n          {filterArray.map((doc) => (\r\n            <button className=\"todo-filter-btn\" onClick={onClick} key={doc.id}>\r\n              {doc.subject}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"history-description\">\r\n          <h1>해당 카테고리 누적 소요 시간 : {TotalTime}</h1>\r\n          <button className=\"reset-btn\" onClick={onReset}>\r\n            <FontAwesomeIcon icon={faExclamationCircle} /> Reset ALL\r\n          </button>\r\n        </div>\r\n        <div className=\"history-table-container\">\r\n          <table className=\"history-table\">\r\n            <thead className=\"history-thead fixedHeader\">\r\n              <tr>\r\n                <th className=\"history-task-column\">완료한 일</th>\r\n                <th className=\"history-category-column\">카테고리</th>\r\n                <th className=\"history-format-column\">형식</th>\r\n                <th className=\"history-due-column\">완료일</th>\r\n                <th className=\"history-studytime-column\">소요 시간</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sortTodo.map((todoList) => (\r\n                <HistoryTable\r\n                  userObj={userObj}\r\n                  key={todoList.id}\r\n                  todoObj={todoList}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"../css/Analysis.css\";\r\n\r\nconst Analysis = ({ todoLists }) => {\r\n  let top3 = [];\r\n  let oT = 0;\r\n\r\n  function secondsToHhMmSs(inputTime) {\r\n    let hours = String(Math.floor(inputTime / 3600)).padStart(2, \"0\");\r\n    let minutes = String(Math.floor((inputTime - 3600 * hours) / 60)).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    let seconds = String(inputTime - 3600 * hours - 60 * minutes).padStart(\r\n      2,\r\n      \"0\"\r\n    );\r\n    const HhMmSs = hours + \":\" + minutes + \":\" + seconds;\r\n    return HhMmSs;\r\n  }\r\n  // 여기서 각 subject 당 시간 더하기\r\n  function reducer(acc, cur) {\r\n    let s = cur.subject;\r\n    if (s in acc) {\r\n      acc[s] += cur.studyTime;\r\n    } else {\r\n      acc[s] = cur.studyTime;\r\n    }\r\n    return acc;\r\n  }\r\n\r\n  let counted = todoLists.reduce(reducer, {});\r\n\r\n  function time_descending(a, b) {\r\n    let aT = counted[a];\r\n    let bT = counted[b];\r\n    return aT > bT ? -1 : 1;\r\n  }\r\n  todoLists.forEach((element) => {\r\n    let nT = oT + element.studyTime;\r\n    oT = nT;\r\n  });\r\n  const sorted = Object.keys(counted).sort(time_descending).slice(0, 3); // 여기서 Top3 key 값 분류\r\n  sorted.forEach((key) => {\r\n    let eT = secondsToHhMmSs(counted[key]);\r\n    const no = {\r\n      id: uuidv4(),\r\n      subject: key,\r\n      studyTime: eT,\r\n      rT: (counted[key] / oT).toFixed(2) * 100,\r\n    };\r\n    top3.push(no);\r\n  });\r\n\r\n  const TotalTime = secondsToHhMmSs(oT);\r\n  return (\r\n    <>\r\n      <div className=\"analysis-total-title\">\r\n        <h1 className=\"anlysis-title-h1\">총 누적 소요시간</h1>\r\n        <h1 className=\"analysis-total-time\">{TotalTime}</h1>\r\n      </div>\r\n      <div className=\"analysis-top3-container\">\r\n        <h1 className=\"analysis-top3-title\">Top 3 카테고리</h1>\r\n        <table className=\"analysis-top3-table-container\">\r\n          <thead>\r\n            <tr className=\"analysis-thead\">\r\n              <th className=\"analysis-subject-column\">카테고리</th>\r\n              <th className=\"anlaysis-studyTime-column\">누적 소요시간</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {top3.map((el) => (\r\n              <tr className=\"analysis-top3-element\">\r\n                <td>{el.subject}</td>\r\n                <td>\r\n                  {el.studyTime} ({el.rT}%)\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analysis;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Notice from \"components/Notice\";\r\nimport TodoListAssign from \"components/TodoListAssign\";\r\nimport Profile from \"components/Profile\";\r\nimport History from \"components/History\";\r\nimport Analysis from \"components/Analysis\";\r\n\r\nconst MyPage = ({ notice, userObj, refreshUser }) => {\r\n  const [todoLists, setTodoLists] = useState([]);\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"completed\")\r\n      .doc(\"sortByUser\")\r\n      .collection(`${userObj.uid}`)\r\n      .onSnapshot((snapshot) => {\r\n        const todoArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTodoLists(todoArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home-container\">\r\n        <div className=\"first-inner-container\">\r\n          <div className=\"first-box-container box-container\">\r\n            <Profile\r\n              className=\"home-profile\"\r\n              userObj={userObj}\r\n              refreshUser={refreshUser}\r\n            />\r\n            <TodoListAssign className=\"home-todo-assign\" userObj={userObj} />\r\n          </div>\r\n          <div className=\"second-box-container box-container\">\r\n            <Analysis todoLists={todoLists} />\r\n          </div>\r\n        </div>\r\n        <div className=\"second-inner-container\">\r\n          <div className=\"third-box-container box-container\">\r\n            <History userObj={userObj} todoLists={todoLists} />\r\n          </div>\r\n          <div className=\"fourth-box-container box-container\">\r\n            <Notice notice={notice} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport MyPage from \"routes/MyPage\";\r\n\r\nconst AppRouter = ({ notice, refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home notice={notice} userObj={userObj} />\r\n            </Route>\r\n            <Route path=\"/my-page\">\r\n              <MyPage\r\n                notice={notice}\r\n                userObj={userObj}\r\n                refreshUser={refreshUser}\r\n              />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport AppRouter from \"components/Router\";\nimport \"../css/App.css\";\n\nfunction App() {\n  const [notice, setNotice] = useState(\"\");\n  const [studyMode, setStudyMode] = useState(null);\n  const [timerMode, setTimerMode] = useState(null);\n  const [modeObj, setModeObj] = useState(null);\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        getcurrentMode(user.uid);\n        getNotice();\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        setModeObj({ studymode: studyMode, timermode: timerMode });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [studyMode, timerMode]);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    getcurrentMode(user.uid);\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    setModeObj({ studymode: studyMode, timermode: timerMode });\n  };\n\n  const getcurrentMode = async (uid) => {\n    const idCheckLists = [];\n    const currentMode = await dbService.collection(\"usermode\").get();\n    currentMode.docs.map((doc) => idCheckLists.push(doc.id));\n    const identifier = idCheckLists.indexOf(uid);\n    if (identifier === -1) {\n      await dbService\n        .collection(\"usermode\")\n        .doc(`${uid}`)\n        .set({ uid: uid, studymode: true, timermode: false });\n    } else {\n      currentMode.docs.map((doc) => {\n        if (doc.data().uid === uid) {\n          setStudyMode(doc.data().studymode);\n          setTimerMode(doc.data().timermode);\n        }\n      });\n    }\n  };\n\n  const getNotice = async () => {\n    const noticeString = await dbService\n      .doc(\"notice/RhvYJs0ZJ0XhjrsolJRe\")\n      .get();\n    setNotice(noticeString.data());\n  };\n\n  return (\n    <>\n      <div className=\"initial-component\">\n        {init ? (\n          <AppRouter\n            notice={notice}\n            modeObj={modeObj}\n            refreshUser={refreshUser}\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n          />\n        ) : (\n          \"Initalizing...\"\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"css/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}